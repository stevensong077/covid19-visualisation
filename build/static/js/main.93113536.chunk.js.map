{"version":3,"sources":["redux/data/actions.js","container/newCases.js","container/activeCases.js","container/map.js","config/index.js","apis/dataApi.js","App.js","redux/data/reducer.js","redux/reducers.js","redux/data/saga.js","redux/sagas.js","redux/store.js","index.js"],"names":["actions","GET_DATA","GET_DATA_SUCCESS","GET_DATA_FAIL","fetchData","type","Title","Typography","BarNew","props","data","useState","dataArray","setDataArray","useEffect","result","newArray","i","length","new","push","post","JSON","stringify","postcode","cases","parseInt","getArray","bordered","style","padding","level","dataSource","columns","title","dataIndex","key","sorter","compare","a","b","rowKey","record","height","width","autoFit","position","color","size","BarActive","total","active","percentage","parseFloat","visible","scale","formatter","val","radius","X","adjust","lineWidth","stroke","label","content","toFixed","state","selected","t","res","getTheme","geometries","interval","rect","fill","MapWithAMakredInfoWindow","compose","withStateHandlers","isOpen","onToggleOpen","withScriptjs","withGoogleMap","dataset","openId","setOpenedId","calculateLocation","marker","nameArray","locationLat","locationLng","sub","lat","lng","suburbs","name","defaultZoom","defaultCenter","gestureHandling","map","onClick","onCloseClick","url","getData","axios","get","status","success","error","getlocation","Text","Footer","Layout","dataActions","connect","dataReducer","datalist","isFetchingData","getActiveDataset","newCases","activeCases","setDataDate","data_date","setTotalNew","setTotalActive","setTotalCases","calculate","searchText","setSearchText","searchedColumn","setSearchedColumn","totalNew","totalActive","totalCases","dataDate","activeDataset","setActiveDataset","searchInput","handleSearch","selectedKeys","confirm","handleReset","clearFilters","filterDropdown","setSelectedKeys","ref","node","placeholder","value","onChange","e","target","onPressEnter","marginBottom","display","icon","SearchOutlined","filterIcon","filtered","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","spinning","subTitle","gutter","span","valueStyle","isMarkerShown","googleMapURL","loadingElement","containerElement","mapElement","textAlign","initState","Reducer","action","payload","getDataList","dataSaga","put","toast","message","autoClose","all","takeLatest","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","store","createStore","combineReducers","reducers","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.93113536.chunk.js","sourcesContent":["const actions = {\n  GET_DATA: \"GET_DATA\",\n  GET_DATA_SUCCESS: \"GET_DATA_SUCCESS\",\n  GET_DATA_FAIL: \"GET_DATA_FAIL\",\n\n  fetchData: () => ({\n    type: actions.GET_DATA,\n  }),\n};\n\nexport default actions","import React, { useState, useEffect } from \"react\";\nimport { Chart, Interval, Coordinate, Axis, getTheme } from \"bizcharts\";\nimport { Typography, Table, Card } from \"antd\";\nconst { Title } = Typography;\n\nconst BarNew = (props) => {\n  const { data } = props;\n  const [dataArray, setDataArray] = useState([]);\n\n  const getArray = () => {\n    let newArray = [];\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].new !== 0) {\n        newArray.push({\n          post: JSON.stringify(data[i].postcode),\n          cases: parseInt(data[i].new),\n        });\n      }\n    }\n    return newArray;\n  };\n\n  useEffect(() => {\n    const result = getArray();\n    setDataArray(result);\n  }, [data]);\n\n  const columns = [\n    {\n      title: \"Postcode\",\n      dataIndex: \"post\",\n      key: \"postcode\",\n    },\n    {\n      title: \"New Cases\",\n      dataIndex: \"cases\",\n      key: \"new\",\n      sorter: { compare: (a, b) => a.new - b.new },\n    },\n  ];\n\n  return (\n    <Card bordered={false} style={{ padding: \"0 80px\" }}>\n      <Title level={4}>New cases</Title>\n      <Table\n        dataSource={dataArray}\n        columns={columns}\n        rowKey={(record) => record.post}\n        style={{ padding: \"20px 0 80px\" }}\n      ></Table>\n      <Chart height={320} width={600} autoFit data={dataArray}>\n        <Interval position=\"post*cases\" color=\"post\" size={80} />\n      </Chart>\n    </Card>\n  );\n};\n\nexport default BarNew;\n","import React, { useState, useEffect } from \"react\";\nimport { Chart, Interval, Coordinate, Axis, getTheme, Legend } from \"bizcharts\";\nimport { Typography, Card } from \"antd\";\nconst { Title } = Typography;\n\nconst BarActive = (props) => {\n  const { data } = props;\n  const [dataArray, setDataArray] = useState([]);\n  const [percentageArray, setPercentageArray] = useState([]);\n\n  const getArray = () => {\n    let total = 0;\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].active !== 0) {\n        total += parseInt(data[i].active);\n      }\n\n      // let percentArray = [];\n      // if (data[i].postcode === 9998) {\n      //   percentArray.push({\n      //     area: \"cases acquired overseas\",\n      //     percents: parseInt(data[i].active) / total,\n      //   })\n      //   percentArray.push({\n      //     area: \"cases acquired locally\",\n      //     percents: 1 - parseInt(data[i].active) / total,\n      //   })\n      // } else if(data[i].postcode === 9999){}\n      // setPercentageArray(percentArray);\n    }\n\n    let newArray = [];\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].active !== 0) {\n        newArray.push({\n          post: JSON.stringify(data[i].postcode),\n          cases: parseInt(data[i].active),\n          percentage: parseFloat(data[i].active / total),\n        });\n      }\n    }\n    return newArray;\n  };\n\n  useEffect(() => {\n    let result = getArray();\n    setDataArray(result);\n  }, [data]);\n\n  const cols = {\n    percentage: {\n      formatter: (val) => {\n        val = val * 100 + \"%\";\n        return val;\n      },\n    },\n  };\n\n  return (\n    <Card bordered={false} style={{ padding: \"0, 50px\" }}>\n      <Title level={4}>Active cases</Title>\n      <Card bordered={false} style={{ padding: \"20px 0 40px\" }}>\n        <Chart height={320} width={600} autoFit data={dataArray}>\n          <Legend visible={false} />\n          <Interval position=\"post*cases\" color=\"post\" />\n        </Chart>\n      </Card>\n      <Chart height={320} width={600} scale={cols} autoFit data={dataArray}>\n        <Coordinate type=\"theta\" radius={0.75} />\n        <Axis visible={false} />\n        <Interval\n          position=\"percentage\"\n          color=\"post\"\n          X\n          adjust=\"stack\"\n          style={{\n            lineWidth: 1,\n            stroke: \"#fff\",\n          }}\n          label={[\n            \"*\",\n            {\n              content: (data) => {\n                return `${data.post}: ${data.percentage.toFixed(4) * 100}%`;\n              },\n            },\n          ]}\n          state={{\n            selected: {\n              style: (t) => {\n                const res = getTheme().geometries.interval.rect.selected.style(\n                  t\n                );\n                return { ...res, fill: \"red\" };\n              },\n            },\n          }}\n        />\n      </Chart>\n    </Card>\n  );\n};\n\nexport default BarActive;\n","import React, { useState } from \"react\";\nimport {\n  GoogleMap,\n  withGoogleMap,\n  Marker,\n  withScriptjs,\n  InfoWindow,\n} from \"react-google-maps\";\nimport { Button } from \"antd\";\nimport { compose, withStateHandlers } from \"recompose\";\n\nconst MapWithAMakredInfoWindow = compose(\n  withStateHandlers(\n    () => ({\n      isOpen: false,\n    }),\n    {\n      onToggleOpen: ({ isOpen }) => () => ({\n        isOpen: !isOpen,\n      }),\n    }\n  ),\n  withScriptjs,\n  withGoogleMap\n)((props) => {\n  const { dataset } = props;\n  const [openId, setOpenedId] = useState(\"\");\n\n  const calculateLocation = (marker) => {\n    let nameArray = [];\n    let locationLat = 0;\n    let locationLng = 0;\n    if (marker.post === \"9998\") {\n      return {\n        sub: \" Overseas\",\n        lat: -37.8247282,\n        lng: 144.9496289,\n      };\n    } else if (marker.post === \"9999\") {\n      return {\n        sub: \" Interstate\",\n        lat: -37.8118235,\n        lng: 144.9614356,\n      };\n    } else {\n      for (let i = 0; i < marker.suburbs.length; i++) {\n        nameArray.push(\" \" + marker.suburbs[i].name);\n        locationLat += marker.suburbs[i].lat;\n        locationLng += marker.suburbs[i].lng;\n      }\n      return {\n        sub: nameArray,\n        lat: locationLat / marker.suburbs.length,\n        lng: locationLng / marker.suburbs.length,\n      };\n    }\n  };\n\n  return (\n    <>\n      {/* <Button onClick={() => dataset.map((marker) => console.log(marker))}>\n        show\n      </Button> */}\n      <GoogleMap\n        defaultZoom={11}\n        defaultCenter={{ lat: -37.8136, lng: 144.9631 }}\n        gestureHandling={\"greedy\"}\n      >\n        {dataset.map((marker) => (\n          <Marker\n            position={{\n              lat: calculateLocation(marker).lat,\n              lng: calculateLocation(marker).lng,\n            }}\n            key={marker.post}\n            onClick={() => setOpenedId(marker.post)}\n          >\n            {openId === marker.post && (\n              <InfoWindow onCloseClick={() => setOpenedId(\"\")}>\n                <>\n                  {marker.post +\n                    \" : \" +\n                    calculateLocation(marker).sub +\n                    \" : \" +\n                    marker.cases}\n                </>\n              </InfoWindow>\n            )}\n          </Marker>\n        ))}\n      </GoogleMap>\n    </>\n  );\n});\n\nexport default MapWithAMakredInfoWindow;\n","// export const url = \"http://localhost:4000\";\nexport const url = \"http://13.54.108.236:4000\";\n\nexport const mapKey = \"AIzaSyCXXn7SJ9ecHFrWFJQxZJ9988gTl7koixs\";\n","import axios from \"axios\";\nimport { url } from \"../config/index\";\nexport async function getData() {\n  try {\n    const result = await axios.get(`${url}/all`);\n    if (result.status === 200) {\n      return {\n        success: true,\n        data: result.data,\n      };\n    }\n  } catch (error) {\n    return { success: false, error };\n  }\n}\n\nexport async function getlocation(postcode) {\n  try {\n    const result = await axios.post(`${url}/postcode`, { postcode: postcode });\n    if (result.status === 200) {\n      return { success: true, data: result.data };\n    }\n  } catch (error) {\n    return { success: false, error };\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Table,\n  Spin,\n  Button,\n  Result,\n  Input,\n  Space,\n  Statistic,\n  Card,\n  Row,\n  Col,\n  Typography,\n  Layout\n} from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport dataActions from \"./redux/data/actions\";\nimport \"antd/dist/antd.css\";\nimport BarNew from \"./container/newCases\";\nimport BarActive from \"./container/activeCases\";\nimport Map from \"./container/map\";\nimport { mapKey } from \"./config/index\";\nimport { getlocation } from \"./apis/dataApi\";\n\nconst { Text, Title } = Typography;\nconst {Footer} = Layout\n\nconst App = (props) => {\n  const { datalist, isFetchingData, fetchData } = props;\n  const calculate = () => {\n    let newCases = 0;\n    let activeCases = 0;\n    let total = 0;\n    for (let i = 0; i < datalist.length; i++) {\n      newCases += parseInt(datalist[i].new);\n      activeCases += parseInt(datalist[i].active);\n      total += parseInt(datalist[i].cases);\n      if (i === 0) {\n        setDataDate(datalist[i].data_date);\n      }\n    }\n    setTotalNew(newCases);\n    setTotalActive(activeCases);\n    setTotalCases(total);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    getActiveDataset();\n    calculate();\n  }, [datalist]);\n\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\n  const [totalNew, setTotalNew] = useState(0);\n  const [totalActive, setTotalActive] = useState(0);\n  const [totalCases, setTotalCases] = useState(0);\n  const [dataDate, setDataDate] = useState(\"\");\n  const [activeDataset, setActiveDataset] = useState([]);\n  let searchInput = \"\";\n\n  const getActiveDataset = async () => {\n    let newArray = [];\n    for (let i = 0; i < datalist.length; i++) {\n      if (datalist[i].active !== 0) {\n        newArray.push({\n          post: JSON.stringify(datalist[i].postcode),\n          suburbs: (await getlocation(datalist[i].postcode)).data,\n          cases: parseInt(datalist[i].active),\n        });\n      }\n    }\n    setActiveDataset(newArray);\n  };\n\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const columns = [\n    {\n      title: \"Postcode\",\n      dataIndex: \"postcode\",\n      key: \"postcode\",\n      ...getColumnSearchProps(\"postcode\"),\n    },\n    {\n      title: \"New Cases\",\n      dataIndex: \"new\",\n      key: \"new\",\n      sorter: { compare: (a, b) => a.new - b.new },\n      render: (data) => (\n        <Text type={parseInt(data) !== 0 ? \"danger\" : \"success\"}>{data}</Text>\n      ),\n    },\n    {\n      title: \"Active Cases\",\n      dataIndex: \"active\",\n      key: \"active\",\n      sorter: { compare: (a, b) => a.active - b.active },\n      render: (data) => (\n        <Text type={parseInt(data) !== 0 ? \"danger\" : \"success\"}>{data}</Text>\n      ),\n    },\n    {\n      title: \"Total Cases\",\n      dataIndex: \"cases\",\n      key: \"cases\",\n      sorter: { compare: (a, b) => a.cases - b.cases },\n      render: (data) => (\n        <Text type={parseInt(data) !== 0 ? \"danger\" : \"success\"}>{data}</Text>\n      ),\n    },\n    { title: \"Population\", dataIndex: \"population\" },\n  ];\n\n  return (\n    <>\n      <Spin spinning={isFetchingData}>\n        <Result\n          icon={<></>}\n          title=\"Covid-19 in Victoria\"\n          subTitle={`Covid-19 information of the past 24 hours statewide.  Data date: ${dataDate}`}\n        />\n        <Row gutter={16} style={{ padding: \"0 300px 40px\" }}>\n          <Col span={8}>\n            <Card>\n              <Statistic\n                title=\"New Cases\"\n                value={totalNew}\n                valueStyle={\n                  totalNew === 0 ? { color: \"#3f8600\" } : { color: \"#cf1322\" }\n                }\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card>\n              <Statistic\n                title=\"Active Cases\"\n                value={totalActive}\n                valueStyle={\n                  totalActive === 0\n                    ? { color: \"#3f8600\" }\n                    : { color: \"#cf1322\" }\n                }\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card>\n              <Statistic\n                title=\"Total Cases\"\n                value={totalCases}\n                valueStyle={{ color: \"#cf1322\" }}\n              />\n            </Card>\n          </Col>\n          <Text type=\"secondary\" style={{ padding: \"30px 10px\" }}>\n            Note: 9998 represent cases acquired overseas . 9999 represent cases\n            acquired interstate.\n          </Text>\n        </Row>\n\n        <Row style={{ padding: \"0 200px 40px\" }}>\n          <Col span={12}>\n            <BarNew data={datalist} />\n          </Col>\n          <Col span={12}>\n            <BarActive data={datalist} />\n          </Col>\n        </Row>\n        <Table\n          dataSource={datalist}\n          columns={columns}\n          style={{ padding: \"0  200px\" }}\n          title={() => \"Search by postcode; Sort by cases\"}\n          bordered={true}\n          rowKey={(record) => record.postcode}\n        />\n        <Card bordered={false} style={{ padding: \"20px 100px 0\" }}>\n          <Title level={4}>Active Cases Distribution</Title>\n          <Map\n            isMarkerShown\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${mapKey}&v=3.exp&libraries=geometry,drawing,places`}\n            loadingElement={<div style={{ height: `80vh` }} />}\n            containerElement={<div style={{ height: `100vh` }} />}\n            mapElement={<div style={{ height: `96vh` }} />}\n            dataset={activeDataset}\n          />\n        </Card>\n        <Footer style={{ textAlign: 'center' }}> 2021 Created by Steven</Footer>\n      </Spin>\n    </>\n  );\n};\nconst { fetchData } = dataActions;\nexport default connect(\n  (state) => {\n    const { datalist, isFetchingData } = state.dataReducer;\n    return { datalist, isFetchingData };\n  },\n  { fetchData }\n)(App);\n","import actions from \"./actions\";\n\nconst initState = {\n  datalist: [],\n  isFetchingData: false,\n};\n\nexport default function dataReducer(state = initState, { type, ...action }) {\n  switch (type) {\n    case actions.GET_DATA:\n      return {\n        ...state,\n        isFetchingData: true,\n      };\n    case actions.GET_DATA_SUCCESS:\n      return {\n        ...state,\n        isFetchingData: false,\n        datalist: action.payload,\n      };\n    case actions.GET_DATA_FAIL:\n      return {\n        ...state,\n        isFetchingData: false,\n      };\n    default:\n      return state;\n  }\n}\n","import dataReducer from \"./data/reducer\";\n\nconst Reducer = { dataReducer };\nexport default Reducer;\n","import { all, put, takeLatest } from \"redux-saga/effects\";\nimport { getData } from \"../../apis/dataApi\";\nimport actions from \"./actions\";\nimport { toast } from \"react-toastify\";\n\nfunction* getDataList() {\n  const { success, data, error } = yield getData();\n  if (success) {\n    yield put({ type: actions.GET_DATA_SUCCESS, payload: data });\n  } else {\n    yield put({ type: actions.GET_DATA_FAIL });\n    toast.error(error.message, { autoClose: 3000 });\n  }\n}\n\nexport default function* dataSaga() {\n  yield all([takeLatest(actions.GET_DATA, getDataList)]);\n}\n","import { all } from \"redux-saga/effects\";\n\nimport dataSaga from \"./data/saga\";\n\nexport default function* rootSaga(/** getState */) {\n  yield all([dataSaga()]);\n}\n","/* eslint-disable no-undef */\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducers from \"./reducers\";\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        trace: true,\n      })\n    : compose;\n\nconst store = createStore(\n  combineReducers({\n    ...reducers,\n  }),\n  composeEnhancers(applyMiddleware(...middlewares))\n);\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}